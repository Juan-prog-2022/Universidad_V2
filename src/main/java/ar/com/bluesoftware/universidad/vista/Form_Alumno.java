package ar.com.bluesoftware.universidad.vista;

import ar.com.bluesoftware.universidad.accesoDatos.Alumno_Datos;
import ar.com.bluesoftware.universidad.entidades.Alumno;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Session;

/**
 *
 * @author Juan
 */
public class Form_Alumno extends javax.swing.JInternalFrame {

    private Alumno a1;
    private Alumno_Datos alumno_Data;
    private Session session;

    /**
     * Creates new form Form_Alumno
     */
    public Form_Alumno(Session session) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null); //Elimina encabezado de ventana
        desactivarCampos();
        this.session = session;
        this.alumno_Data = new Alumno_Datos(this.session);
        System.out.println("Form_Alumno: Sesión recibida y asignada correctamente.");
        jBGuardar.setEnabled(false);
        jBEliminar.setEnabled(false);
        jDateFechaNacimiento.setEnabled(false);

        // Configura un ActionListener para el botón Salir
        jBSalir.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cerrarVentana();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLAlumno = new javax.swing.JLabel();
        jLDocumento = new javax.swing.JLabel();
        jLApellido = new javax.swing.JLabel();
        jLNombre = new javax.swing.JLabel();
        jTDocumento = new javax.swing.JTextField();
        jTApellido = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jTNombre = new javax.swing.JTextField();
        jLEstado = new javax.swing.JLabel();
        jRBEstado = new javax.swing.JRadioButton();
        jLFechaNacimiento = new javax.swing.JLabel();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jBNuevo = new javax.swing.JButton();
        jBGuardar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 40, 520, 10));

        jLAlumno.setFont(new java.awt.Font("Vollkorn Bold", 1, 24)); // NOI18N
        jLAlumno.setForeground(new java.awt.Color(0, 0, 204));
        jLAlumno.setText("Alumno");
        getContentPane().add(jLAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 110, -1));

        jLDocumento.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLDocumento.setForeground(new java.awt.Color(0, 0, 0));
        jLDocumento.setText("Documento");
        getContentPane().add(jLDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, 20));

        jLApellido.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLApellido.setForeground(new java.awt.Color(0, 0, 0));
        jLApellido.setText("Apellido");
        getContentPane().add(jLApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, 20));

        jLNombre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLNombre.setForeground(new java.awt.Color(0, 0, 0));
        jLNombre.setText("Nombre");
        getContentPane().add(jLNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jTDocumento.setBackground(java.awt.Color.white);
        getContentPane().add(jTDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 72, 210, 30));

        jTApellido.setBackground(java.awt.Color.white);
        getContentPane().add(jTApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 210, 30));

        jbBuscar.setBackground(new java.awt.Color(102, 102, 255));
        jbBuscar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jbBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jbBuscar.setText("Buscar");
        jbBuscar.setPreferredSize(new java.awt.Dimension(70, 30));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jbBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 80, 20));

        jTNombre.setBackground(java.awt.Color.white);
        getContentPane().add(jTNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 182, 210, 30));

        jLEstado.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLEstado.setForeground(new java.awt.Color(0, 0, 0));
        jLEstado.setText("Estado");
        getContentPane().add(jLEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));
        getContentPane().add(jRBEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 260, 30, 20));

        jLFechaNacimiento.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLFechaNacimiento.setForeground(new java.awt.Color(0, 0, 0));
        jLFechaNacimiento.setText("Fecha de Nacimiento");
        getContentPane().add(jLFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, -1, -1));
        getContentPane().add(jDateFechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 315, 177, -1));

        jBNuevo.setBackground(new java.awt.Color(102, 102, 255));
        jBNuevo.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jBNuevo.setForeground(new java.awt.Color(255, 255, 255));
        jBNuevo.setText("Nuevo");
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(jBNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, 80, -1));

        jBGuardar.setBackground(new java.awt.Color(102, 102, 255));
        jBGuardar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jBGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jBGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, 90, -1));

        jBEliminar.setBackground(new java.awt.Color(102, 102, 255));
        jBEliminar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jBEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 90, -1));

        jBSalir.setBackground(new java.awt.Color(102, 102, 255));
        jBSalir.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(255, 255, 255));
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jBSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 480, 70, -1));

        setBounds(100, 100, 583, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // Obtener el documento ingresado
        //Form_Alumno formAlumno = new Form_Alumno(session);
        System.out.println("Form_Alumno: alumno_Data es " + (alumno_Data != null ? "no nulo" : "nulo"));
        int dni = 0;

        try {
            dni = Integer.parseInt(jTDocumento.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un número válido para el DNI.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear una única instancia de Alumno_Datos en el constructor
        if (alumno_Data == null) {
            alumno_Data = new Alumno_Datos(session);
        }

        // Buscar al alumno por documento
        a1 = alumno_Data.obtenerAlumnoPorDni(dni);

        if (a1 != null) {
            // Llenar los campos con la información del alumno encontrado
            jTNombre.setText(a1.getNombre());
            jTApellido.setText(a1.getApellido());
            jDateFechaNacimiento.setDate(Date.from(a1.getFechaNac().atStartOfDay(ZoneId.systemDefault()).toInstant()));
            jRBEstado.setSelected(a1.isEstado());
            // Habilitar campos para edición
            habilitarCampos();
            // Habilitar botones Guardar y Eliminar
            jBGuardar.setEnabled(true);
            jBEliminar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "Alumno no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
            limpiarCampos();
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
        habilitarCampos();
        limpiarCampos();
        jTDocumento.requestFocus();
        jTDocumento.setText("");

        jBGuardar.setEnabled(true);
        //jRBEstado.setEnabled(false);
        jBEliminar.setEnabled(false);
        jBNuevo.setEnabled(false);
    }//GEN-LAST:event_jBNuevoActionPerformed

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        if (camposValidos()) {
            // Obtén los valores de los campos
            String documento = jTDocumento.getText();
            String nombre = jTNombre.getText();
            String apellido = jTApellido.getText();
            boolean estado = jRBEstado.isSelected();

            // Realiza las acciones necesarias para guardar los datos (puedes llamar a métodos de la capa de datos, por ejemplo)
            // Ejemplo: alumno_Datos.guardarAlumno(documento, nombre, apellido, fechaNacimiento);
            a1 = new Alumno();
            
            a1.setDni(Integer.parseInt(documento));
            a1.setApellido(apellido);
            a1.setNombre(nombre);
            a1.setEstado(estado);
            LocalDate fecNac = jDateFechaNacimiento.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            a1.setFechaNac(fecNac);
            alumno_Data.actualizarAlumno(a1);
            //JOptionPane.showMessageDialog(null, "Alumno " + alumno.getApellido() + " ha sido modificado. ");
            

            // Después de guardar, puedes realizar acciones adicionales, como limpiar campos, deshabilitar botones, etc.
            limpiarCampos();
            desactivarCampos();
            jBGuardar.setEnabled(false);
            jBEliminar.setEnabled(false);
            jBNuevo.setEnabled(true);
            

            // Puedes mostrar un mensaje de éxito
            JOptionPane.showMessageDialog(this, "Datos guardados exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed

    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed

    }//GEN-LAST:event_jBSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBSalir;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private javax.swing.JLabel jLAlumno;
    private javax.swing.JLabel jLApellido;
    private javax.swing.JLabel jLDocumento;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFechaNacimiento;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JRadioButton jRBEstado;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTDocumento;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JButton jbBuscar;
    // End of variables declaration//GEN-END:variables

    public void desactivarCampos() {
        jTApellido.setEnabled(false);
        jTNombre.setEnabled(false);
        jDateFechaNacimiento.setEnabled(false);
    }

    public void habilitarCampos() {
        jTDocumento.setEnabled(true);
        jTNombre.setEnabled(true);
        jTApellido.setEnabled(true);
        jDateFechaNacimiento.setEnabled(true);
    }

    public void limpiarCampos() {
        jTDocumento.setText("");
        jTNombre.setText("");
        jTApellido.setText("");
        jDateFechaNacimiento.setCalendar(null);
        jRBEstado.setSelected(false);
    }

    private void cerrarVentana() {
        // Oculta la ventana
        this.setVisible(false);
        // Libera recursos asociados a la ventana
        this.dispose();
    }

    public void cerrarSesion() {
        if (session != null && session.isOpen()) {
            session.close();
            System.out.println("Sesión cerrada correctamente en Form_Alumno.");
        }
    }

    private boolean camposValidos() {
        String documento = jTDocumento.getText();
        String nombre = jTNombre.getText();
        String apellido = jTApellido.getText();
        Date fechaNacimiento = jDateFechaNacimiento.getDate();

        // Verifica si los campos obligatorios están completos
        if (documento.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || fechaNacimiento == null) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos obligatorios.", "Error de validación", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Puedes agregar lógica adicional para validar el formato de los datos (por ejemplo, verificar si el documento es un número, etc.)
        return true;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        // Configura un color transparente para el fondo
        Color transparentColor = new Color(0, 0, 0, 0); // R, G, B, Alpha
        g.setColor(transparentColor);
        g.fillRect(0, 0, getWidth(), getHeight());
    }
}
